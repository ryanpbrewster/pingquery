// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pingquery.api.Config', null, global);
goog.exportSymbol('proto.pingquery.api.DiagnosticsRequest', null, global);
goog.exportSymbol('proto.pingquery.api.DiagnosticsResponse', null, global);
goog.exportSymbol('proto.pingquery.api.ExecRequest', null, global);
goog.exportSymbol('proto.pingquery.api.ExecResponse', null, global);
goog.exportSymbol('proto.pingquery.api.GetConfigRequest', null, global);
goog.exportSymbol('proto.pingquery.api.GetConfigResponse', null, global);
goog.exportSymbol('proto.pingquery.api.InitializeRequest', null, global);
goog.exportSymbol('proto.pingquery.api.InitializeResponse', null, global);
goog.exportSymbol('proto.pingquery.api.InteractRequest', null, global);
goog.exportSymbol('proto.pingquery.api.InteractRequest.TypeCase', null, global);
goog.exportSymbol('proto.pingquery.api.InteractResponse', null, global);
goog.exportSymbol('proto.pingquery.api.MutateConfig', null, global);
goog.exportSymbol('proto.pingquery.api.QueryConfig', null, global);
goog.exportSymbol('proto.pingquery.api.QueryDiagnostics', null, global);
goog.exportSymbol('proto.pingquery.api.Row', null, global);
goog.exportSymbol('proto.pingquery.api.SetConfigRequest', null, global);
goog.exportSymbol('proto.pingquery.api.SetConfigResponse', null, global);
goog.exportSymbol('proto.pingquery.api.Statement', null, global);
goog.exportSymbol('proto.pingquery.api.Value', null, global);
goog.exportSymbol('proto.pingquery.api.Value.TypeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.InitializeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.InitializeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.InitializeRequest.displayName = 'proto.pingquery.api.InitializeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.InitializeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.InitializeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.InitializeResponse.displayName = 'proto.pingquery.api.InitializeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.DiagnosticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.DiagnosticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.DiagnosticsRequest.displayName = 'proto.pingquery.api.DiagnosticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.DiagnosticsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.DiagnosticsResponse.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.DiagnosticsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.DiagnosticsResponse.displayName = 'proto.pingquery.api.DiagnosticsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.QueryDiagnostics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.QueryDiagnostics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.QueryDiagnostics.displayName = 'proto.pingquery.api.QueryDiagnostics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.GetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.GetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.GetConfigRequest.displayName = 'proto.pingquery.api.GetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.GetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.GetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.GetConfigResponse.displayName = 'proto.pingquery.api.GetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.SetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.SetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.SetConfigRequest.displayName = 'proto.pingquery.api.SetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.SetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.SetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.SetConfigResponse.displayName = 'proto.pingquery.api.SetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.ExecRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.ExecRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.ExecRequest.displayName = 'proto.pingquery.api.ExecRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.ExecResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.ExecResponse.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.ExecResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.ExecResponse.displayName = 'proto.pingquery.api.ExecResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.InteractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pingquery.api.InteractRequest.oneofGroups_);
};
goog.inherits(proto.pingquery.api.InteractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.InteractRequest.displayName = 'proto.pingquery.api.InteractRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.InteractResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.InteractResponse.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.InteractResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.InteractResponse.displayName = 'proto.pingquery.api.InteractResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.Config.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.Config.displayName = 'proto.pingquery.api.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.QueryConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.QueryConfig.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.QueryConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.QueryConfig.displayName = 'proto.pingquery.api.QueryConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.MutateConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pingquery.api.MutateConfig.repeatedFields_, null);
};
goog.inherits(proto.pingquery.api.MutateConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.MutateConfig.displayName = 'proto.pingquery.api.MutateConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.Statement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.Statement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.Statement.displayName = 'proto.pingquery.api.Statement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pingquery.api.Value.oneofGroups_);
};
goog.inherits(proto.pingquery.api.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.Value.displayName = 'proto.pingquery.api.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pingquery.api.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pingquery.api.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pingquery.api.Row.displayName = 'proto.pingquery.api.Row';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.InitializeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.InitializeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.InitializeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InitializeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.InitializeRequest}
 */
proto.pingquery.api.InitializeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.InitializeRequest;
  return proto.pingquery.api.InitializeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.InitializeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.InitializeRequest}
 */
proto.pingquery.api.InitializeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.InitializeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.InitializeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.InitializeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InitializeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.InitializeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.InitializeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.InitializeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InitializeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.InitializeResponse}
 */
proto.pingquery.api.InitializeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.InitializeResponse;
  return proto.pingquery.api.InitializeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.InitializeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.InitializeResponse}
 */
proto.pingquery.api.InitializeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.InitializeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.InitializeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.InitializeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InitializeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.DiagnosticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.DiagnosticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.DiagnosticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.DiagnosticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.DiagnosticsRequest}
 */
proto.pingquery.api.DiagnosticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.DiagnosticsRequest;
  return proto.pingquery.api.DiagnosticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.DiagnosticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.DiagnosticsRequest}
 */
proto.pingquery.api.DiagnosticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.DiagnosticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.DiagnosticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.DiagnosticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.DiagnosticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.DiagnosticsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.DiagnosticsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.DiagnosticsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.DiagnosticsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.DiagnosticsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    numConnectedClients: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.pingquery.api.QueryDiagnostics.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.DiagnosticsResponse}
 */
proto.pingquery.api.DiagnosticsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.DiagnosticsResponse;
  return proto.pingquery.api.DiagnosticsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.DiagnosticsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.DiagnosticsResponse}
 */
proto.pingquery.api.DiagnosticsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumConnectedClients(value);
      break;
    case 2:
      var value = new proto.pingquery.api.QueryDiagnostics;
      reader.readMessage(value,proto.pingquery.api.QueryDiagnostics.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.DiagnosticsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.DiagnosticsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.DiagnosticsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.DiagnosticsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumConnectedClients();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pingquery.api.QueryDiagnostics.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 num_connected_clients = 1;
 * @return {number}
 */
proto.pingquery.api.DiagnosticsResponse.prototype.getNumConnectedClients = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pingquery.api.DiagnosticsResponse} returns this
 */
proto.pingquery.api.DiagnosticsResponse.prototype.setNumConnectedClients = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated QueryDiagnostics queries = 2;
 * @return {!Array<!proto.pingquery.api.QueryDiagnostics>}
 */
proto.pingquery.api.DiagnosticsResponse.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.pingquery.api.QueryDiagnostics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pingquery.api.QueryDiagnostics, 2));
};


/**
 * @param {!Array<!proto.pingquery.api.QueryDiagnostics>} value
 * @return {!proto.pingquery.api.DiagnosticsResponse} returns this
*/
proto.pingquery.api.DiagnosticsResponse.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pingquery.api.QueryDiagnostics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.QueryDiagnostics}
 */
proto.pingquery.api.DiagnosticsResponse.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pingquery.api.QueryDiagnostics, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.DiagnosticsResponse} returns this
 */
proto.pingquery.api.DiagnosticsResponse.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.QueryDiagnostics.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.QueryDiagnostics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.QueryDiagnostics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.QueryDiagnostics.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numExecutions: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.QueryDiagnostics}
 */
proto.pingquery.api.QueryDiagnostics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.QueryDiagnostics;
  return proto.pingquery.api.QueryDiagnostics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.QueryDiagnostics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.QueryDiagnostics}
 */
proto.pingquery.api.QueryDiagnostics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumExecutions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.QueryDiagnostics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.QueryDiagnostics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.QueryDiagnostics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.QueryDiagnostics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumExecutions();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pingquery.api.QueryDiagnostics.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.QueryDiagnostics} returns this
 */
proto.pingquery.api.QueryDiagnostics.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 num_executions = 2;
 * @return {number}
 */
proto.pingquery.api.QueryDiagnostics.prototype.getNumExecutions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pingquery.api.QueryDiagnostics} returns this
 */
proto.pingquery.api.QueryDiagnostics.prototype.setNumExecutions = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.GetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.GetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.GetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.GetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.GetConfigRequest}
 */
proto.pingquery.api.GetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.GetConfigRequest;
  return proto.pingquery.api.GetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.GetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.GetConfigRequest}
 */
proto.pingquery.api.GetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.GetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.GetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.GetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.GetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.GetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.GetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.GetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.GetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.pingquery.api.Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.GetConfigResponse}
 */
proto.pingquery.api.GetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.GetConfigResponse;
  return proto.pingquery.api.GetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.GetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.GetConfigResponse}
 */
proto.pingquery.api.GetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pingquery.api.Config;
      reader.readMessage(value,proto.pingquery.api.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.GetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.GetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.GetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.GetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pingquery.api.Config.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config config = 1;
 * @return {?proto.pingquery.api.Config}
 */
proto.pingquery.api.GetConfigResponse.prototype.getConfig = function() {
  return /** @type{?proto.pingquery.api.Config} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Config, 1));
};


/**
 * @param {?proto.pingquery.api.Config|undefined} value
 * @return {!proto.pingquery.api.GetConfigResponse} returns this
*/
proto.pingquery.api.GetConfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.GetConfigResponse} returns this
 */
proto.pingquery.api.GetConfigResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.GetConfigResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.SetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.SetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.SetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.SetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.pingquery.api.Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.SetConfigRequest}
 */
proto.pingquery.api.SetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.SetConfigRequest;
  return proto.pingquery.api.SetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.SetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.SetConfigRequest}
 */
proto.pingquery.api.SetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pingquery.api.Config;
      reader.readMessage(value,proto.pingquery.api.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.SetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.SetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.SetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.SetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pingquery.api.Config.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config config = 1;
 * @return {?proto.pingquery.api.Config}
 */
proto.pingquery.api.SetConfigRequest.prototype.getConfig = function() {
  return /** @type{?proto.pingquery.api.Config} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Config, 1));
};


/**
 * @param {?proto.pingquery.api.Config|undefined} value
 * @return {!proto.pingquery.api.SetConfigRequest} returns this
*/
proto.pingquery.api.SetConfigRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.SetConfigRequest} returns this
 */
proto.pingquery.api.SetConfigRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.SetConfigRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.SetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.SetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.SetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.SetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.SetConfigResponse}
 */
proto.pingquery.api.SetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.SetConfigResponse;
  return proto.pingquery.api.SetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.SetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.SetConfigResponse}
 */
proto.pingquery.api.SetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.SetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.SetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.SetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.SetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.ExecRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.ExecRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.ExecRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.ExecRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawSql: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.ExecRequest}
 */
proto.pingquery.api.ExecRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.ExecRequest;
  return proto.pingquery.api.ExecRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.ExecRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.ExecRequest}
 */
proto.pingquery.api.ExecRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawSql(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.ExecRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.ExecRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.ExecRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.ExecRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRawSql();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string raw_sql = 1;
 * @return {string}
 */
proto.pingquery.api.ExecRequest.prototype.getRawSql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.ExecRequest} returns this
 */
proto.pingquery.api.ExecRequest.prototype.setRawSql = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.ExecResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.ExecResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.ExecResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.ExecResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.ExecResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.pingquery.api.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.ExecResponse}
 */
proto.pingquery.api.ExecResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.ExecResponse;
  return proto.pingquery.api.ExecResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.ExecResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.ExecResponse}
 */
proto.pingquery.api.ExecResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pingquery.api.Row;
      reader.readMessage(value,proto.pingquery.api.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.ExecResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.ExecResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.ExecResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.ExecResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pingquery.api.Row.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Row rows = 1;
 * @return {!Array<!proto.pingquery.api.Row>}
 */
proto.pingquery.api.ExecResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.pingquery.api.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pingquery.api.Row, 1));
};


/**
 * @param {!Array<!proto.pingquery.api.Row>} value
 * @return {!proto.pingquery.api.ExecResponse} returns this
*/
proto.pingquery.api.ExecResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pingquery.api.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.Row}
 */
proto.pingquery.api.ExecResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pingquery.api.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.ExecResponse} returns this
 */
proto.pingquery.api.ExecResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pingquery.api.InteractRequest.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.pingquery.api.InteractRequest.TypeCase = {
  TYPE_NOT_SET: 0,
  MUTATE: 2,
  QUERY: 3,
  LISTEN: 4
};

/**
 * @return {proto.pingquery.api.InteractRequest.TypeCase}
 */
proto.pingquery.api.InteractRequest.prototype.getTypeCase = function() {
  return /** @type {proto.pingquery.api.InteractRequest.TypeCase} */(jspb.Message.computeOneofCase(this, proto.pingquery.api.InteractRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.InteractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.InteractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.InteractRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InteractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mutate: (f = msg.getMutate()) && proto.pingquery.api.Statement.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.pingquery.api.Statement.toObject(includeInstance, f),
    listen: (f = msg.getListen()) && proto.pingquery.api.Statement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.InteractRequest}
 */
proto.pingquery.api.InteractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.InteractRequest;
  return proto.pingquery.api.InteractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.InteractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.InteractRequest}
 */
proto.pingquery.api.InteractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.pingquery.api.Statement;
      reader.readMessage(value,proto.pingquery.api.Statement.deserializeBinaryFromReader);
      msg.setMutate(value);
      break;
    case 3:
      var value = new proto.pingquery.api.Statement;
      reader.readMessage(value,proto.pingquery.api.Statement.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 4:
      var value = new proto.pingquery.api.Statement;
      reader.readMessage(value,proto.pingquery.api.Statement.deserializeBinaryFromReader);
      msg.setListen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.InteractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.InteractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.InteractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InteractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMutate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pingquery.api.Statement.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pingquery.api.Statement.serializeBinaryToWriter
    );
  }
  f = message.getListen();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pingquery.api.Statement.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pingquery.api.InteractRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pingquery.api.InteractRequest} returns this
 */
proto.pingquery.api.InteractRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Statement mutate = 2;
 * @return {?proto.pingquery.api.Statement}
 */
proto.pingquery.api.InteractRequest.prototype.getMutate = function() {
  return /** @type{?proto.pingquery.api.Statement} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Statement, 2));
};


/**
 * @param {?proto.pingquery.api.Statement|undefined} value
 * @return {!proto.pingquery.api.InteractRequest} returns this
*/
proto.pingquery.api.InteractRequest.prototype.setMutate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pingquery.api.InteractRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.InteractRequest} returns this
 */
proto.pingquery.api.InteractRequest.prototype.clearMutate = function() {
  return this.setMutate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.InteractRequest.prototype.hasMutate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Statement query = 3;
 * @return {?proto.pingquery.api.Statement}
 */
proto.pingquery.api.InteractRequest.prototype.getQuery = function() {
  return /** @type{?proto.pingquery.api.Statement} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Statement, 3));
};


/**
 * @param {?proto.pingquery.api.Statement|undefined} value
 * @return {!proto.pingquery.api.InteractRequest} returns this
*/
proto.pingquery.api.InteractRequest.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pingquery.api.InteractRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.InteractRequest} returns this
 */
proto.pingquery.api.InteractRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.InteractRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Statement listen = 4;
 * @return {?proto.pingquery.api.Statement}
 */
proto.pingquery.api.InteractRequest.prototype.getListen = function() {
  return /** @type{?proto.pingquery.api.Statement} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Statement, 4));
};


/**
 * @param {?proto.pingquery.api.Statement|undefined} value
 * @return {!proto.pingquery.api.InteractRequest} returns this
*/
proto.pingquery.api.InteractRequest.prototype.setListen = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.pingquery.api.InteractRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.InteractRequest} returns this
 */
proto.pingquery.api.InteractRequest.prototype.clearListen = function() {
  return this.setListen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.InteractRequest.prototype.hasListen = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.InteractResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.InteractResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.InteractResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.InteractResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InteractResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.pingquery.api.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.InteractResponse}
 */
proto.pingquery.api.InteractResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.InteractResponse;
  return proto.pingquery.api.InteractResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.InteractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.InteractResponse}
 */
proto.pingquery.api.InteractResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.pingquery.api.Row;
      reader.readMessage(value,proto.pingquery.api.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.InteractResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.InteractResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.InteractResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.InteractResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pingquery.api.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pingquery.api.InteractResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pingquery.api.InteractResponse} returns this
 */
proto.pingquery.api.InteractResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Row rows = 2;
 * @return {!Array<!proto.pingquery.api.Row>}
 */
proto.pingquery.api.InteractResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.pingquery.api.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pingquery.api.Row, 2));
};


/**
 * @param {!Array<!proto.pingquery.api.Row>} value
 * @return {!proto.pingquery.api.InteractResponse} returns this
*/
proto.pingquery.api.InteractResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pingquery.api.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.Row}
 */
proto.pingquery.api.InteractResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pingquery.api.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.InteractResponse} returns this
 */
proto.pingquery.api.InteractResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.Config.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.pingquery.api.QueryConfig.toObject, includeInstance),
    mutatesList: jspb.Message.toObjectList(msg.getMutatesList(),
    proto.pingquery.api.MutateConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.Config}
 */
proto.pingquery.api.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.Config;
  return proto.pingquery.api.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.Config}
 */
proto.pingquery.api.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pingquery.api.QueryConfig;
      reader.readMessage(value,proto.pingquery.api.QueryConfig.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    case 2:
      var value = new proto.pingquery.api.MutateConfig;
      reader.readMessage(value,proto.pingquery.api.MutateConfig.deserializeBinaryFromReader);
      msg.addMutates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pingquery.api.QueryConfig.serializeBinaryToWriter
    );
  }
  f = message.getMutatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pingquery.api.MutateConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryConfig queries = 1;
 * @return {!Array<!proto.pingquery.api.QueryConfig>}
 */
proto.pingquery.api.Config.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.pingquery.api.QueryConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pingquery.api.QueryConfig, 1));
};


/**
 * @param {!Array<!proto.pingquery.api.QueryConfig>} value
 * @return {!proto.pingquery.api.Config} returns this
*/
proto.pingquery.api.Config.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pingquery.api.QueryConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.QueryConfig}
 */
proto.pingquery.api.Config.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pingquery.api.QueryConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.Config} returns this
 */
proto.pingquery.api.Config.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};


/**
 * repeated MutateConfig mutates = 2;
 * @return {!Array<!proto.pingquery.api.MutateConfig>}
 */
proto.pingquery.api.Config.prototype.getMutatesList = function() {
  return /** @type{!Array<!proto.pingquery.api.MutateConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pingquery.api.MutateConfig, 2));
};


/**
 * @param {!Array<!proto.pingquery.api.MutateConfig>} value
 * @return {!proto.pingquery.api.Config} returns this
*/
proto.pingquery.api.Config.prototype.setMutatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pingquery.api.MutateConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.MutateConfig}
 */
proto.pingquery.api.Config.prototype.addMutates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pingquery.api.MutateConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.Config} returns this
 */
proto.pingquery.api.Config.prototype.clearMutatesList = function() {
  return this.setMutatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.QueryConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.QueryConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.QueryConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.QueryConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.QueryConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sqlTemplate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    listenList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.QueryConfig}
 */
proto.pingquery.api.QueryConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.QueryConfig;
  return proto.pingquery.api.QueryConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.QueryConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.QueryConfig}
 */
proto.pingquery.api.QueryConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSqlTemplate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addListen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.QueryConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.QueryConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.QueryConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.QueryConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSqlTemplate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getListenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pingquery.api.QueryConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.QueryConfig} returns this
 */
proto.pingquery.api.QueryConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sql_template = 2;
 * @return {string}
 */
proto.pingquery.api.QueryConfig.prototype.getSqlTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.QueryConfig} returns this
 */
proto.pingquery.api.QueryConfig.prototype.setSqlTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string listen = 3;
 * @return {!Array<string>}
 */
proto.pingquery.api.QueryConfig.prototype.getListenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pingquery.api.QueryConfig} returns this
 */
proto.pingquery.api.QueryConfig.prototype.setListenList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.QueryConfig} returns this
 */
proto.pingquery.api.QueryConfig.prototype.addListen = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.QueryConfig} returns this
 */
proto.pingquery.api.QueryConfig.prototype.clearListenList = function() {
  return this.setListenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pingquery.api.MutateConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.MutateConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.MutateConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.MutateConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.MutateConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sqlTemplate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    notifyList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.MutateConfig}
 */
proto.pingquery.api.MutateConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.MutateConfig;
  return proto.pingquery.api.MutateConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.MutateConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.MutateConfig}
 */
proto.pingquery.api.MutateConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSqlTemplate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotify(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.MutateConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.MutateConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.MutateConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.MutateConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSqlTemplate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNotifyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pingquery.api.MutateConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.MutateConfig} returns this
 */
proto.pingquery.api.MutateConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sql_template = 2;
 * @return {string}
 */
proto.pingquery.api.MutateConfig.prototype.getSqlTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.MutateConfig} returns this
 */
proto.pingquery.api.MutateConfig.prototype.setSqlTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string notify = 3;
 * @return {!Array<string>}
 */
proto.pingquery.api.MutateConfig.prototype.getNotifyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pingquery.api.MutateConfig} returns this
 */
proto.pingquery.api.MutateConfig.prototype.setNotifyList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pingquery.api.MutateConfig} returns this
 */
proto.pingquery.api.MutateConfig.prototype.addNotify = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pingquery.api.MutateConfig} returns this
 */
proto.pingquery.api.MutateConfig.prototype.clearNotifyList = function() {
  return this.setNotifyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.Statement.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.Statement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.Statement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Statement.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    params: (f = msg.getParams()) && proto.pingquery.api.Row.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.Statement}
 */
proto.pingquery.api.Statement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.Statement;
  return proto.pingquery.api.Statement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.Statement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.Statement}
 */
proto.pingquery.api.Statement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.pingquery.api.Row;
      reader.readMessage(value,proto.pingquery.api.Row.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.Statement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.Statement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.Statement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Statement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pingquery.api.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pingquery.api.Statement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.Statement} returns this
 */
proto.pingquery.api.Statement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Row params = 2;
 * @return {?proto.pingquery.api.Row}
 */
proto.pingquery.api.Statement.prototype.getParams = function() {
  return /** @type{?proto.pingquery.api.Row} */ (
    jspb.Message.getWrapperField(this, proto.pingquery.api.Row, 2));
};


/**
 * @param {?proto.pingquery.api.Row|undefined} value
 * @return {!proto.pingquery.api.Statement} returns this
*/
proto.pingquery.api.Statement.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pingquery.api.Statement} returns this
 */
proto.pingquery.api.Statement.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.Statement.prototype.hasParams = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pingquery.api.Value.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pingquery.api.Value.TypeCase = {
  TYPE_NOT_SET: 0,
  INTEGER: 1,
  TEXT: 2
};

/**
 * @return {proto.pingquery.api.Value.TypeCase}
 */
proto.pingquery.api.Value.prototype.getTypeCase = function() {
  return /** @type {proto.pingquery.api.Value.TypeCase} */(jspb.Message.computeOneofCase(this, proto.pingquery.api.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    integer: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.Value}
 */
proto.pingquery.api.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.Value;
  return proto.pingquery.api.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.Value}
 */
proto.pingquery.api.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInteger(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 integer = 1;
 * @return {number}
 */
proto.pingquery.api.Value.prototype.getInteger = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pingquery.api.Value} returns this
 */
proto.pingquery.api.Value.prototype.setInteger = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pingquery.api.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pingquery.api.Value} returns this
 */
proto.pingquery.api.Value.prototype.clearInteger = function() {
  return jspb.Message.setOneofField(this, 1, proto.pingquery.api.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.Value.prototype.hasInteger = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.pingquery.api.Value.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pingquery.api.Value} returns this
 */
proto.pingquery.api.Value.prototype.setText = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pingquery.api.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pingquery.api.Value} returns this
 */
proto.pingquery.api.Value.prototype.clearText = function() {
  return jspb.Message.setOneofField(this, 2, proto.pingquery.api.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pingquery.api.Value.prototype.hasText = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pingquery.api.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.pingquery.api.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pingquery.api.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsMap: (f = msg.getColumnsMap()) ? f.toObject(includeInstance, proto.pingquery.api.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pingquery.api.Row}
 */
proto.pingquery.api.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pingquery.api.Row;
  return proto.pingquery.api.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pingquery.api.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pingquery.api.Row}
 */
proto.pingquery.api.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getColumnsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.pingquery.api.Value.deserializeBinaryFromReader, "", new proto.pingquery.api.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pingquery.api.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pingquery.api.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pingquery.api.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pingquery.api.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.pingquery.api.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, Value> columns = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.pingquery.api.Value>}
 */
proto.pingquery.api.Row.prototype.getColumnsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.pingquery.api.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.pingquery.api.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.pingquery.api.Row} returns this
 */
proto.pingquery.api.Row.prototype.clearColumnsMap = function() {
  this.getColumnsMap().clear();
  return this;};


goog.object.extend(exports, proto.pingquery.api);
