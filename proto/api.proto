syntax = "proto3";

package pingquery.api;

service PingQuery {
  rpc Initialize (InitializeRequest) returns (InitializeResponse) {}

  rpc GetConfig (GetConfigRequest) returns (GetConfigResponse) {}
  rpc SetConfig (SetConfigRequest) returns (SetConfigResponse) {}

  rpc Exec (ExecRequest) returns (ExecResponse) {}
  rpc Interact (stream InteractRequest) returns (stream InteractResponse) {}
}

message InitializeRequest {}
message InitializeResponse {}

message GetConfigRequest {}

message GetConfigResponse {
  Config config = 1;
}

message SetConfigRequest {
  Config config = 1;
}

message SetConfigResponse {}

message ExecRequest {
  string raw_sql = 1;
}

message ExecResponse {
  repeated Row rows = 1;
}

message InteractRequest {
  /// An identifier that the server will echo back with any response related to this request.
  /// Must be monotonically increasing.
  int32 id = 1;

  oneof type {
    Statement mutate = 2;
    Statement query = 3;
    Statement listen = 4;
  }
}

message InteractResponse {
  /// The identifier of the request that generated this response.
  int32 id = 1;
  repeated Row rows = 2;
}

message Config {
  repeated QueryConfig queries = 1;
  repeated MutateConfig mutates = 2;
}

message QueryConfig {
  string name = 1;
  string sql_template = 2;
  repeated Path listen = 3;
}

message MutateConfig {
  string name = 1;
  string sql_template = 2;
  repeated Path notify = 3;
}

message Statement {
  string name = 1;
  Row params = 2;
}

message Value {
  oneof type {
    int64 integer = 1;
    string text = 2;
  }
}

message Row {
  map<string, Value> columns = 1;
}

message Path {
  repeated string segments = 1;
}